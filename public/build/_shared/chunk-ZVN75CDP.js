import{F as f,G as k,i as g}from"/build/_shared/chunk-RSBDZNQN.js";import{c as p,d as x,e as u}from"/build/_shared/chunk-MFPRU5OA.js";var h=class{baseUrl;developmentPorts=["8000","8001"];lastWorkingPort=null;constructor(){if(typeof window<"u"&&window.location.hostname==="localhost"){let t=this.lastWorkingPort||this.developmentPorts[0];this.baseUrl=`http://localhost:${t}`}else this.baseUrl="https://plc-copilot.onrender.com"}async findWorkingPort(){if(typeof window>"u"||window.location.hostname!=="localhost")return this.baseUrl;if(this.lastWorkingPort){let t=`http://localhost:${this.lastWorkingPort}`;if(await this.testUrl(t))return t}for(let t of this.developmentPorts){let n=`http://localhost:${t}`;if(await this.testUrl(n))return this.lastWorkingPort=t,this.baseUrl=n,n}return"https://plc-copilot.onrender.com"}async testUrl(t){try{return(await fetch(`${t}/health`,{method:"GET",headers:{Accept:"application/json"},signal:AbortSignal.timeout(2e3)})).ok}catch{return!1}}async chat(t){let n={user_prompt:t.user_prompt,model:t.model||"gpt-4o-mini",temperature:t.temperature||.7,max_completion_tokens:t.max_completion_tokens||1024},c=await this.findWorkingPort();try{let r=await fetch(`${c}/api/v1/ai/chat`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(n)});if(!r.ok){let i=`HTTP error! status: ${r.status}`;try{let o=await r.json();i=o.detail||o.message||i}catch{}throw new Error(i)}return await r.json()}catch(r){throw console.error("API request failed:",r),r instanceof TypeError&&r.message.includes("fetch")?new Error("Unable to connect to PLC Copilot backend. Please check your connection."):r}}async healthCheck(){try{let t=await this.findWorkingPort();return(await fetch(`${t}/health`,{method:"GET",headers:{Accept:"application/json"}})).ok}catch{return!1}}async getBaseUrl(){return await this.findWorkingPort()}},m=new h;var s=p(x(),1);var e=p(u(),1);function y({className:a=""}){let[t,n]=(0,s.useState)(null),[c,r]=(0,s.useState)(!1),[d,i]=(0,s.useState)(""),o=async()=>{r(!0);try{let l=await m.healthCheck();if(n(l),l){let b=await m.getBaseUrl();i(b)}}catch{n(!1)}finally{r(!1)}};return(0,s.useEffect)(()=>{o();let l=setInterval(o,3e4);return()=>clearInterval(l)},[]),t===null?(0,e.jsxs)("div",{className:`flex items-center gap-2 text-gray-400 ${a}`,children:[(0,e.jsx)("div",{className:"w-2 h-2 bg-gray-400 rounded-full animate-pulse",title:"Checking connection..."}),(0,e.jsx)("span",{className:"text-xs hidden sm:inline",children:"Checking connection..."})]}):(0,e.jsx)("div",{className:`flex items-center gap-2 ${a}`,children:t?(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)("div",{title:`Connected to ${d||"backend"}`,children:(0,e.jsx)(k,{className:"w-3 h-3 text-green-500"})}),(0,e.jsxs)("span",{className:"text-xs text-green-500 hidden sm:inline",children:["Connected to ",d||"backend"]})]}):(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)("div",{title:"Backend offline",children:(0,e.jsx)(f,{className:"w-3 h-3 text-red-500"})}),(0,e.jsx)("span",{className:"text-xs text-red-500 hidden sm:inline",children:"Backend offline"}),(0,e.jsx)("button",{onClick:o,disabled:c,className:"text-xs text-orange-500 hover:text-orange-400 underline disabled:opacity-50 hidden sm:inline",children:c?"Checking...":"Retry"})]})})}function P({error:a,onRetry:t,className:n=""}){return(0,e.jsxs)("div",{className:`flex items-start gap-2 p-3 bg-red-900/20 border border-red-700/30 rounded-lg ${n}`,children:[(0,e.jsx)(g,{className:"w-4 h-4 text-red-500 flex-shrink-0 mt-0.5"}),(0,e.jsxs)("div",{className:"flex-1",children:[(0,e.jsx)("p",{className:"text-sm text-red-300",children:a}),t&&(0,e.jsx)("button",{onClick:t,className:"text-xs text-orange-500 hover:text-orange-400 underline mt-1",children:"Try again"})]})]})}export{m as a,y as b,P as c};
